type Activity {
    adventure_id: Int!
    user_id: Int!
    public: Boolean!
}

type ActivityByAdventure {
    user_id: Int!
    first_name: String!
    last_name: String!
    email: String!
}

type ActivityByUser {
    user_id: Int!
    adventure_name: String!
    adventure_type: String!
    difficulty: String!
    nearest_city: String!
}

type ActivityCount {
    count: Int!
}

# Queries

type Query {
    getAllActivitiesByAdventure(adventure_id: Int!): [ActivityByAdventure!]!
    getAllActivitiesByUser(user_id: Int!): [ActivityByUser]!
    getAllActivityCountByUser(user_id: Int!): ActivityCount!
}

# Mutations

type Mutation {
    createActivity(adventure_id: Int!, public: Boolean!): Activity!
}